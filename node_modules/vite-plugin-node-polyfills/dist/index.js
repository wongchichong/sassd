import { createRequire as c } from "node:module";
import b from "@rollup/plugin-inject";
import g from "node-stdlib-browser";
import { handleCircularDependancyWarning as d } from "node-stdlib-browser/helpers/rollup/plugin";
import m from "node-stdlib-browser/helpers/esbuild/plugin";
const u = (e) => e ? e === !0 ? !0 : e === "build" : !1, p = (e) => e ? e === !0 ? !0 : e === "dev" : !1, h = (e) => e.startsWith("node:"), w = (e = {}) => {
  const s = c(import.meta.url).resolve("node-stdlib-browser/helpers/esbuild/shim"), r = {
    exclude: [],
    protocolImports: !0,
    ...e,
    globals: {
      Buffer: !0,
      global: !0,
      process: !0,
      ...e.globals
    }
  }, a = (t) => r.exclude.some((i) => t === i || t === `node:${i}`);
  return {
    name: "vite-plugin-node-polyfills",
    config: (t, i) => {
      const f = Object.entries(g).reduce((o, [l, n]) => (!r.protocolImports && h(l) || a(l) || (o[l] = n), o), {});
      return {
        build: {
          rollupOptions: {
            onwarn: (o, l) => {
              d(o, l);
            },
            plugins: [
              {
                ...b({
                  // https://github.com/niksy/node-stdlib-browser/blob/3e7cd7f3d115ac5c4593b550e7d8c4a82a0d4ac4/README.md#vite
                  ...u(r.globals.Buffer) ? { Buffer: [s, "Buffer"] } : {},
                  ...u(r.globals.global) ? { global: [s, "global"] } : {},
                  ...u(r.globals.process) ? { process: [s, "process"] } : {}
                })
              }
            ]
          }
        },
        optimizeDeps: {
          esbuildOptions: {
            // https://github.com/niksy/node-stdlib-browser/blob/3e7cd7f3d115ac5c4593b550e7d8c4a82a0d4ac4/README.md?plain=1#L203-L209
            define: {
              ...p(r.globals.Buffer) ? { Buffer: "Buffer" } : {},
              ...p(r.globals.global) ? { global: "global" } : {},
              ...p(r.globals.process) ? { process: "process" } : {}
            },
            inject: [
              s
            ],
            plugins: [
              m(f),
              // Supress the 'injected path "..." cannot be marked as external' error in Vite 4 (emitted by esbuild).
              // https://github.com/evanw/esbuild/blob/edede3c49ad6adddc6ea5b3c78c6ea7507e03020/internal/bundler/bundler.go#L1469
              {
                name: "vite-plugin-node-polyfills-shims-resolver",
                setup(o) {
                  const l = s.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), n = new RegExp(`^${l}$`);
                  o.onResolve({ filter: n }, () => ({
                    // https://github.com/evanw/esbuild/blob/edede3c49ad6adddc6ea5b3c78c6ea7507e03020/internal/bundler/bundler.go#L1468
                    external: !1,
                    path: s
                  }));
                }
              }
            ]
          }
        },
        resolve: {
          // https://github.com/niksy/node-stdlib-browser/blob/3e7cd7f3d115ac5c4593b550e7d8c4a82a0d4ac4/README.md?plain=1#L150
          alias: {
            ...f
          }
        }
      };
    }
  };
};
export {
  w as nodePolyfills
};
//# sourceMappingURL=index.js.map
